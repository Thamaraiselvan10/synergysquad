---
// src/components/Hero.astro
---
<section class="hero">
  <div class="hero-slideshow">
    <div
      class="slide current-slide"
      style="background-image: url('https://images.unsplash.com/photo-1555066931-4365d14bab8c?q=80&w=2070');"
    ></div>
    <div
      class="slide"
      style="background-image: url('images/Banner.jpeg');"
    ></div>
    <div
      class="slide"
      style="background-image: url('https://images.unsplash.com/photo-1517694712202-14dd9538aa97?q=80&w=2070');"
    ></div>
  </div>

  <div class="hero-overlay"></div>

  <!-- Navigation Buttons -->
  <button id="prev-slide" class="slide-nav-button prev-button" aria-label="Previous Slide">
    &#10094;
  </button>
  <button id="next-slide" class="slide-nav-button next-button" aria-label="Next Slide">
    &#10095;
  </button>

  <!-- Dot Indicators -->
  <div class="slide-dots">
    <span class="dot active"></span>
    <span class="dot"></span>
    <span class="dot"></span>
  </div>
</section>

<style>
  .hero {
    position: relative;
    overflow: hidden;
    min-height: 80vh;
  }

  .hero-slideshow {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
  }

  .slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    opacity: 0;
    transition: opacity 1.5s ease-in-out;
  }

  .slide.current-slide {
    opacity: 1;
  }

  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(10, 20, 40, 0.5);
    z-index: 1;
  }

  /* --- Elegant, Minimal Slide Buttons --- */
  .slide-nav-button {
    position: absolute;
    top: 55%;
    transform: translateY(-50%);
    background-color: rgba(255, 255, 255, 0.08);
    color: rgba(255, 255, 255, 0.6);
    border: none;
    border-radius: 50%;
    font-size: 1.2rem;
    padding: 0.4rem 0.6rem;
    cursor: pointer;
    opacity: 0.6;
    transition: all 0.3s ease;
    backdrop-filter: blur(5px);
    z-index: 3;
  }

  .slide-nav-button:hover {
    background-color: rgba(255, 255, 255, 0.25);
    color: #fff;
    opacity: 1;
    transform: translateY(-50%) scale(1.05);
  }

  .slide-nav-button.prev-button {
    left: 0.8rem;
  }

  .slide-nav-button.next-button {
    right: 0.8rem;
  }

  /* --- Dot Indicators --- */
  .slide-dots {
    position: absolute;
    bottom: 1.2rem;
    width: 100%;
    text-align: center;
    z-index: 3;
  }

  .dot {
    cursor: pointer;
    height: 8px;
    width: 8px;
    margin: 0 0.4rem;
    background-color: rgba(255, 255, 255, 0.4);
    border-radius: 50%;
    display: inline-block;
    transition: background-color 0.4s ease;
  }

  .dot.active,
  .dot:hover {
    background-color: #fff;
  }

  @media (max-width: 768px) {
    .hero {
      min-height: 50vh;
    }

    .slide-nav-button {
      font-size: 1rem;
      padding: 0.3rem 0.5rem;
    }

    .dot {
      height: 6px;
      width: 6px;
      margin: 0 0.3rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const slides = document.querySelectorAll('.slide');
    const dots = document.querySelectorAll('.dot');
    const prevButton = document.getElementById('prev-slide');
    const nextButton = document.getElementById('next-slide');

    let currentSlideIndex = 0;
    const slideIntervalTime = 4000; // 4 seconds per image
    let slideInterval;

    function showSlide(index) {
      if (index >= slides.length) index = 0;
      else if (index < 0) index = slides.length - 1;

      slides.forEach((slide) => slide.classList.remove('current-slide'));
      dots.forEach((dot) => dot.classList.remove('active'));

      slides[index].classList.add('current-slide');
      dots[index].classList.add('active');
      currentSlideIndex = index;
    }

    function nextSlide() {
      showSlide(currentSlideIndex + 1);
    }

    function prevSlide() {
      showSlide(currentSlideIndex - 1);
    }

    nextButton.addEventListener('click', () => {
      nextSlide();
      resetInterval();
    });

    prevButton.addEventListener('click', () => {
      prevSlide();
      resetInterval();
    });

    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        showSlide(index);
        resetInterval();
      });
    });

    function startAutoSlide() {
      slideInterval = setInterval(nextSlide, slideIntervalTime);
    }

    function resetInterval() {
      clearInterval(slideInterval);
      startAutoSlide();
    }

    showSlide(currentSlideIndex);
    startAutoSlide();
  });
</script>
