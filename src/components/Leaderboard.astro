---
// src/components/Leaderboard.astro

// This is our dummy data for the leaderboard.
// LATER, this will be fetched from the CMS or a database.
const leaderboardData = [
    { rank: 1, name: 'Jeevanandan G', score: 1250 },
    { rank: 2, name: 'Anuvarshini T R', score: 1210 },
    { rank: 3, name: 'Shriyaa S V', score: 1185 },
    { rank: 4, name: 'Karthikeyan S', score: 1150 },
    { rank: 5, name: 'rolex D', score: 1120 },
    { rank: 6, name: 'Keerthana D', score: 1090 },
    { rank: 7, name: 'Shabari K S', score: 1075 },
    { rank: 8, name: 'Vibhav M', score: 1050 },
];
---

<section class="leaderboard-section">
    <div class="container">
        <div class="section-header fade-in-up">
            <h2 class="section-title">Overall Leaderboard</h2>
            <p class="section-subtitle">
                Recognizing the consistent top performers across all challenges and seasons.
            </p>
        </div>

        <div class="leaderboard-container fade-in-up">
            <div class="leaderboard-header">
                <div class="header-item rank">Rank</div>
                <div class="header-item name">Student Name</div>
                <div class="header-item score">Total Score</div>
            </div>
            <div class="leaderboard-body">
                {leaderboardData.map(player => (
                    <div class="leaderboard-row" class:list={[{ 'top-three': player.rank <= 3 }]}>
                        <div class="row-item rank">#{player.rank}</div>
                        <div class="row-item name">{player.name}</div>
                        <div class="row-item score">{player.score.toLocaleString()} PTS</div>
                    </div>
                ))}
            </div>
        </div>

    </div>
</section>

<style>
    .leaderboard-section {
        padding: 6rem 1.5rem;
        background-color: var(--background-color); /* Light gray background */
    }
    .container { max-width: 800px; margin: auto; } /* Narrower container for a focused table */
    
    /* Header Styles */
    .section-header { text-align: center; margin-bottom: 4rem; }
    .section-title { font-size: 2.75rem; font-weight: 900; margin-bottom: 1rem; position: relative; display: inline-block; }
    .section-title::after { content: ''; position: absolute; bottom: -0.5rem; left: 50%; transform: translateX(-50%); height: 5px; width: 0; background: linear-gradient(90deg, var(--primary-color), #6366f1); border-radius: 5px; animation: grow-underline 1s ease-out forwards; animation-delay: 0.5s; }
    @keyframes grow-underline { to { width: 100px; } }
    .section-subtitle { max-width: 65ch; margin: auto; font-size: 1.125rem; color: var(--text-secondary); line-height: 1.8; }

    /* Leaderboard Styles */
    .leaderboard-container {
        background-color: #fff;
        border-radius: 12px;
        border: 1px solid var(--border-color);
        box-shadow: 0 10px 25px -5px rgb(0 0 0 / 0.05);
        overflow: hidden; /* To make sure border-radius clips the content */
    }
    .leaderboard-header, .leaderboard-row {
        display: grid;
        grid-template-columns: 100px 1fr 150px; /* Define column widths */
        gap: 1rem;
        padding: 1rem 1.5rem;
        align-items: center;
    }

    .leaderboard-header {
        background-color: #f8fafc;
        font-weight: 600;
        color: var(--text-secondary);
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }
    .leaderboard-row {
        border-top: 1px solid var(--border-color);
        transition: background-color 0.3s ease;
    }
    .leaderboard-row:hover {
        background-color: #f8fafc;
    }

    /* Column alignment */
    .header-item.score, .row-item.score { text-align: right; }
    
    /* Cell Styles */
    .row-item.rank { font-weight: 700; color: var(--text-primary); }
    .row-item.name { font-weight: 500; color: var(--text-primary); }
    .row-item.score { font-weight: 700; color: var(--primary-color); }

    /* Special styling for top 3 */
    .leaderboard-row.top-three .row-item.rank,
    .leaderboard-row.top-three .row-item.name {
        font-weight: 700;
        color: var(--primary-color);
    }
    .leaderboard-row.top-three .row-item.rank {
        font-size: 1.125rem;
    }

    /* On-scroll animation */
    .fade-in-up { opacity: 0; transform: translateY(30px); transition: opacity 0.6s ease-out, transform 0.6s ease-out; }
    .fade-in-up.is-visible { opacity: 1; transform: translateY(0); }
    .leaderboard-container.fade-in-up { transition-delay: 0.2s; }
</style>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const elements = document.querySelectorAll('.fade-in-up');
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('is-visible');
                    observer.unobserve(entry.target);
                }
            });
        }, { threshold: 0.1 });
        elements.forEach(element => observer.observe(element));
    });
</script>